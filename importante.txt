docker build -t product-backend .
docker tag product-backend giovannimbesi/product-backend:latest
docker push giovannimbesi/product-backend:latest

docker build -t product-frontend .
docker tag product-frontend giovannimbesi/product-frontend:latest
docker push giovannimbesi/product-frontend:latest

docker run --rm -p 80:80 product-frontend
docker run --rm -p 8080:8080 product-backend

minikube start
kubectl apply -f deployments/mysql.yaml
kubectl apply -f deployments/product-frontend.yaml
kubectl apply -f deployments/product-backend.yaml

kubectl get all -o

kubectl port-forward service/product-backend 8080:8080

minikube service product-backend --url


RDS Params

productDB
root
giovanni
3307
productdb.chkcwmeiw65e.eu-north-1.rds.amazonaws.com

security group

my-security-group



EC2 params

productEc2
13.53.199.174






avere un ingress che fa il routing sulla rotta route verso il frontend

ed un /api verso il backend

ingress funziona da api gateway e risolve 

tutti i servizi devono uscire con un unico servizio ip


due diagrammi architetturali
uno ad alto livello
ed uno a livello di ogni blocchetto
ogni capitolo un aspetto cos√¨ come l'ho presentato


usare clusterIP